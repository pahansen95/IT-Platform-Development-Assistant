#!/usr/bin/env bash

set -vEeuo pipefail

log() {
  echo "[$(date -u +'%Y-%m-%dT%H:%M:%SZ')] $*"
}

# Make sure we are running as root
if [[ $EUID -ne 0 ]]; then
  echo "This script must be run as root"
  exit 1
fi

declare dependencies=(
  "ip"
  "{{ spec.qemu.bin }}"
)

if ! command -v "${dependencies[@]}"; then
  log "Missing dependencies" "${dependencies[@]}"
  exit 1
fi

# Create the PID File Directory
if [[ ! -d "/run/hypervisor" ]]; then
  mkdir "/run/hypervisor"
fi

declare subcmd="${1:?Must declare a Subcommand}"
case "${subcmd,,}" in
  "up" )
    log "Bringing up Guest"
    # Create a Tap Device
    if [[ -z "$(ip tuntap show {{ (['tap', metadata.uuid | replace('-', '')] | join(''))[0:15] }})" ]]; then
      log "Creating Tap Device"
      ip tuntap add mode tap name {{ (['tap', metadata.uuid | replace('-', '')] | join(''))[0:15] }}
    fi
    # Attach the Tap Device to the Bridge
    log "Attaching Tap Device to Bridge"
    ip link set {{ (['tap', metadata.uuid | replace('-', '')] | join(''))[0:15] }} master {{ spec.network.bridge }}
    # Bring the Tap Device Up
    log "Bringing Tap Device Up"
    ip link set {{ (['tap', metadata.uuid | replace('-', '')] | join(''))[0:15] }} up

    # Run the Guest VM as a Daemon
    log "Running Guest"
    {{ spec.qemu.bin }} \
      -name "guest-{{ metadata.name }}-{{ metadata.uuid }}" \
      -daemonize \
      -machine type=microvm,accel=kvm \
      -cpu host \
      -smp "cpus={{ spec.cpu }}" \
      -m "size={{ spec.memory }}" \
      -display "none" \
    {% if debug.enabled | default(false) %}
      -serial "telnet:127.0.0.1:56789,server=on,wait=yes" \
    {% else %}
      -serial "telnet:127.0.0.1:56789,server=on,wait=no" \
    {% endif %}
      -blockdev "driver=file,node-name=file0,filename=/var/lib/hypervisor/volumes/slow/{{ metadata.name }}/{{ metadata.uuid }}.img" \
      -blockdev "driver=qcow2,node-name=blk0,file=file0" \
      -device "virtio-blk-device,drive=blk0,serial={{ metadata.uuid }}" \
    {% for vol in spec.volumes %}
      -blockdev "driver=file,node-name=file{{ loop.index + 1 }},filename=/var/lib/hypervisor/volumes/{{ vol.storageClass }}/{{ metadata.name }}/{{ vol.uuid }}.img" \
      -blockdev "driver=qcow2,node-name=blk{{ loop.index + 1 }},file=file{{ loop.index + 1 }}" \
      -device "virtio-blk-device,drive=blk{{ loop.index + 1 }},serial={{ vol.uuid }}" \
    {% endfor %}
      -blockdev "driver=file,node-name=cloudinit0,filename=/var/lib/hypervisor/guests/{{ metadata.name }}/cloudinit.iso" \
      -device "virtio-blk-device,drive=cloudinit0,serial=cloudinit0" \
      -netdev "tap,id=net0,ifname={{ (['tap', metadata.uuid | replace('-', '')] | join(''))[0:15] }},script=no,downscript=no" \
      -device "virtio-net-device,netdev=net0,mac={{ spec.network.hwaddr }}" \
      -pidfile "/run/hypervisor/guest-{{ metadata.name }}-{{ metadata.uuid }}.pid" \
      -kernel "/var/lib/hypervisor/images/{{ spec.image.name }}/kernel" \
      -initrd "/var/lib/hypervisor/images/{{ spec.image.name }}/initrd" \
      -append "root=/dev/vda1 console=ttyS0"
    ;;
  "down" )
    log "Bringing down Guest"
    # Kill the Guest VM
    log "Killing Guest"
    kill "$(cat "/run/hypervisor/guest-{{ metadata.name }}-{{ metadata.uuid }}.pid")" || true
    # Remove the Tap Device
    log "Removing Tap Device"
    ip tuntap del mode tap name {{ (['tap', metadata.uuid | replace('-', '')] | join(''))[0:15] }} || true
    ;;
  * )
    log "Unknown Subcommand" "${subcmd,,}"
    exit 1
    ;;
esac
